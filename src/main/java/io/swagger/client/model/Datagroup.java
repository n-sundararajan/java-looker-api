/*
 * Looker API 3.0 Reference
 * ### Authorization  The Looker API uses Looker **API3** credentials for authorization and access control. Looker admins can create API3 credentials on Looker's **Admin/Users** page. Pass API3 credentials to the **_/login** endpoint to obtain a temporary access_token. Include that access_token in the Authorization header of Looker API requests. For details, see [Looker API Authorization](https://looker.com/docs/r/api/authorization)  ### Client SDKs  The Looker API is a RESTful system that should be usable by any programming language capable of making HTTPS requests. Client SDKs for a variety of programming languages can be generated from the Looker API's Swagger JSON metadata to streamline use of the Looker API in your applications. A client SDK for Ruby is available as an example. For more information, see [Looker API Client SDKs](https://looker.com/docs/r/api/client_sdks)  ### Try It Out!  The 'api-docs' page served by the Looker instance includes 'Try It Out!' buttons for each API method. After logging in with API3 credentials, you can use the \"Try It Out!\" buttons to call the API directly from the documentation page to interactively explore API features and responses.  ### Versioning  Future releases of Looker will expand this API release-by-release to securely expose more and more of the core power of Looker to API client applications. API endpoints marked as \"beta\" may receive breaking changes without warning. Stable (non-beta) API endpoints should not receive breaking changes in future releases. For more information, see [Looker API Versioning](https://looker.com/docs/r/api/versioning) 
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Datagroup
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-06-08T15:12:41.902+05:30")
public class Datagroup {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("model_name")
  private String modelName = null;

  @SerializedName("trigger_value")
  private String triggerValue = null;

  @SerializedName("trigger_error")
  private String triggerError = null;

  @SerializedName("stale_before")
  private Long staleBefore = null;

  @SerializedName("triggered_at")
  private Long triggeredAt = null;

  @SerializedName("trigger_check_at")
  private Long triggerCheckAt = null;

  @SerializedName("created_at")
  private Long createdAt = null;

  @SerializedName("can")
  private Map<String, Boolean> can = null;

   /**
   * ID of the datagroup. Also used as the unique identifier.
   * @return id
  **/
  @ApiModelProperty(value = "ID of the datagroup. Also used as the unique identifier.")
  public Long getId() {
    return id;
  }

   /**
   * Name of the datagroup. Unique when combined with model_name.
   * @return name
  **/
  @ApiModelProperty(value = "Name of the datagroup. Unique when combined with model_name.")
  public String getName() {
    return name;
  }

   /**
   * Name of the model containing the datagroup. Unique when combined with name.
   * @return modelName
  **/
  @ApiModelProperty(value = "Name of the model containing the datagroup. Unique when combined with name.")
  public String getModelName() {
    return modelName;
  }

   /**
   * The value of the trigger when last checked.
   * @return triggerValue
  **/
  @ApiModelProperty(value = "The value of the trigger when last checked.")
  public String getTriggerValue() {
    return triggerValue;
  }

   /**
   * The message returned with the error of the last trigger check.
   * @return triggerError
  **/
  @ApiModelProperty(value = "The message returned with the error of the last trigger check.")
  public String getTriggerError() {
    return triggerError;
  }

  public Datagroup staleBefore(Long staleBefore) {
    this.staleBefore = staleBefore;
    return this;
  }

   /**
   * UNIX timestamp before which cache entries are considered stale. Cannot be in the future.
   * @return staleBefore
  **/
  @ApiModelProperty(value = "UNIX timestamp before which cache entries are considered stale. Cannot be in the future.")
  public Long getStaleBefore() {
    return staleBefore;
  }

  public void setStaleBefore(Long staleBefore) {
    this.staleBefore = staleBefore;
  }

  public Datagroup triggeredAt(Long triggeredAt) {
    this.triggeredAt = triggeredAt;
    return this;
  }

   /**
   * UNIX timestamp at which this entry became triggered. Cannot be in the future.
   * @return triggeredAt
  **/
  @ApiModelProperty(value = "UNIX timestamp at which this entry became triggered. Cannot be in the future.")
  public Long getTriggeredAt() {
    return triggeredAt;
  }

  public void setTriggeredAt(Long triggeredAt) {
    this.triggeredAt = triggeredAt;
  }

   /**
   * UNIX timestamp at which this entry trigger was last checked.
   * @return triggerCheckAt
  **/
  @ApiModelProperty(value = "UNIX timestamp at which this entry trigger was last checked.")
  public Long getTriggerCheckAt() {
    return triggerCheckAt;
  }

   /**
   * UNIX timestamp at which this entry was created.
   * @return createdAt
  **/
  @ApiModelProperty(value = "UNIX timestamp at which this entry was created.")
  public Long getCreatedAt() {
    return createdAt;
  }

  public Datagroup can(Map<String, Boolean> can) {
    this.can = can;
    return this;
  }

  public Datagroup putCanItem(String key, Boolean canItem) {
    if (this.can == null) {
      this.can = new HashMap<String, Boolean>();
    }
    this.can.put(key, canItem);
    return this;
  }

   /**
   * Operations the current user is able to perform on this object
   * @return can
  **/
  @ApiModelProperty(value = "Operations the current user is able to perform on this object")
  public Map<String, Boolean> getCan() {
    return can;
  }

  public void setCan(Map<String, Boolean> can) {
    this.can = can;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Datagroup datagroup = (Datagroup) o;
    return Objects.equals(this.id, datagroup.id) &&
        Objects.equals(this.name, datagroup.name) &&
        Objects.equals(this.modelName, datagroup.modelName) &&
        Objects.equals(this.triggerValue, datagroup.triggerValue) &&
        Objects.equals(this.triggerError, datagroup.triggerError) &&
        Objects.equals(this.staleBefore, datagroup.staleBefore) &&
        Objects.equals(this.triggeredAt, datagroup.triggeredAt) &&
        Objects.equals(this.triggerCheckAt, datagroup.triggerCheckAt) &&
        Objects.equals(this.createdAt, datagroup.createdAt) &&
        Objects.equals(this.can, datagroup.can);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, modelName, triggerValue, triggerError, staleBefore, triggeredAt, triggerCheckAt, createdAt, can);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Datagroup {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    modelName: ").append(toIndentedString(modelName)).append("\n");
    sb.append("    triggerValue: ").append(toIndentedString(triggerValue)).append("\n");
    sb.append("    triggerError: ").append(toIndentedString(triggerError)).append("\n");
    sb.append("    staleBefore: ").append(toIndentedString(staleBefore)).append("\n");
    sb.append("    triggeredAt: ").append(toIndentedString(triggeredAt)).append("\n");
    sb.append("    triggerCheckAt: ").append(toIndentedString(triggerCheckAt)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    can: ").append(toIndentedString(can)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

