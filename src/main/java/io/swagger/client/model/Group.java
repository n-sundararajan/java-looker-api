/*
 * Looker API 3.0 Reference
 * ### Authorization  The Looker API uses Looker **API3** credentials for authorization and access control. Looker admins can create API3 credentials on Looker's **Admin/Users** page. Pass API3 credentials to the **_/login** endpoint to obtain a temporary access_token. Include that access_token in the Authorization header of Looker API requests. For details, see [Looker API Authorization](https://looker.com/docs/r/api/authorization)  ### Client SDKs  The Looker API is a RESTful system that should be usable by any programming language capable of making HTTPS requests. Client SDKs for a variety of programming languages can be generated from the Looker API's Swagger JSON metadata to streamline use of the Looker API in your applications. A client SDK for Ruby is available as an example. For more information, see [Looker API Client SDKs](https://looker.com/docs/r/api/client_sdks)  ### Try It Out!  The 'api-docs' page served by the Looker instance includes 'Try It Out!' buttons for each API method. After logging in with API3 credentials, you can use the \"Try It Out!\" buttons to call the API directly from the documentation page to interactively explore API features and responses.  ### Versioning  Future releases of Looker will expand this API release-by-release to securely expose more and more of the core power of Looker to API client applications. API endpoints marked as \"beta\" may receive breaking changes without warning. Stable (non-beta) API endpoints should not receive breaking changes in future releases. For more information, see [Looker API Versioning](https://looker.com/docs/r/api/versioning) 
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Group
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-06-08T15:12:41.902+05:30")
public class Group {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("user_count")
  private Long userCount = null;

  @SerializedName("contains_current_user")
  private Boolean containsCurrentUser = null;

  @SerializedName("externally_managed")
  private Boolean externallyManaged = null;

  @SerializedName("include_by_default")
  private Boolean includeByDefault = null;

  @SerializedName("external_group_id")
  private String externalGroupId = null;

  @SerializedName("can_add_to_content_metadata")
  private Boolean canAddToContentMetadata = null;

  @SerializedName("can")
  private Map<String, Boolean> can = null;

   /**
   * Unique Id
   * @return id
  **/
  @ApiModelProperty(value = "Unique Id")
  public Long getId() {
    return id;
  }

  public Group name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of group
   * @return name
  **/
  @ApiModelProperty(value = "Name of group")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

   /**
   * Number of users included in this group
   * @return userCount
  **/
  @ApiModelProperty(value = "Number of users included in this group")
  public Long getUserCount() {
    return userCount;
  }

   /**
   * Currently logged in user is group member
   * @return containsCurrentUser
  **/
  @ApiModelProperty(value = "Currently logged in user is group member")
  public Boolean isContainsCurrentUser() {
    return containsCurrentUser;
  }

   /**
   * Group membership controlled outside of Looker
   * @return externallyManaged
  **/
  @ApiModelProperty(value = "Group membership controlled outside of Looker")
  public Boolean isExternallyManaged() {
    return externallyManaged;
  }

   /**
   * New users are added to this group by default
   * @return includeByDefault
  **/
  @ApiModelProperty(value = "New users are added to this group by default")
  public Boolean isIncludeByDefault() {
    return includeByDefault;
  }

   /**
   * External Id group if embed group
   * @return externalGroupId
  **/
  @ApiModelProperty(value = "External Id group if embed group")
  public String getExternalGroupId() {
    return externalGroupId;
  }

  public Group canAddToContentMetadata(Boolean canAddToContentMetadata) {
    this.canAddToContentMetadata = canAddToContentMetadata;
    return this;
  }

   /**
   * Group can be used in content access controls
   * @return canAddToContentMetadata
  **/
  @ApiModelProperty(value = "Group can be used in content access controls")
  public Boolean isCanAddToContentMetadata() {
    return canAddToContentMetadata;
  }

  public void setCanAddToContentMetadata(Boolean canAddToContentMetadata) {
    this.canAddToContentMetadata = canAddToContentMetadata;
  }

  public Group can(Map<String, Boolean> can) {
    this.can = can;
    return this;
  }

  public Group putCanItem(String key, Boolean canItem) {
    if (this.can == null) {
      this.can = new HashMap<String, Boolean>();
    }
    this.can.put(key, canItem);
    return this;
  }

   /**
   * Operations the current user is able to perform on this object
   * @return can
  **/
  @ApiModelProperty(value = "Operations the current user is able to perform on this object")
  public Map<String, Boolean> getCan() {
    return can;
  }

  public void setCan(Map<String, Boolean> can) {
    this.can = can;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Group group = (Group) o;
    return Objects.equals(this.id, group.id) &&
        Objects.equals(this.name, group.name) &&
        Objects.equals(this.userCount, group.userCount) &&
        Objects.equals(this.containsCurrentUser, group.containsCurrentUser) &&
        Objects.equals(this.externallyManaged, group.externallyManaged) &&
        Objects.equals(this.includeByDefault, group.includeByDefault) &&
        Objects.equals(this.externalGroupId, group.externalGroupId) &&
        Objects.equals(this.canAddToContentMetadata, group.canAddToContentMetadata) &&
        Objects.equals(this.can, group.can);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, userCount, containsCurrentUser, externallyManaged, includeByDefault, externalGroupId, canAddToContentMetadata, can);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Group {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    userCount: ").append(toIndentedString(userCount)).append("\n");
    sb.append("    containsCurrentUser: ").append(toIndentedString(containsCurrentUser)).append("\n");
    sb.append("    externallyManaged: ").append(toIndentedString(externallyManaged)).append("\n");
    sb.append("    includeByDefault: ").append(toIndentedString(includeByDefault)).append("\n");
    sb.append("    externalGroupId: ").append(toIndentedString(externalGroupId)).append("\n");
    sb.append("    canAddToContentMetadata: ").append(toIndentedString(canAddToContentMetadata)).append("\n");
    sb.append("    can: ").append(toIndentedString(can)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

