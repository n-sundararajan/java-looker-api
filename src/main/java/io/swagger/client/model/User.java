/*
 * Looker API 3.0 Reference
 * ### Authorization  The Looker API uses Looker **API3** credentials for authorization and access control. Looker admins can create API3 credentials on Looker's **Admin/Users** page. Pass API3 credentials to the **_/login** endpoint to obtain a temporary access_token. Include that access_token in the Authorization header of Looker API requests. For details, see [Looker API Authorization](https://looker.com/docs/r/api/authorization)  ### Client SDKs  The Looker API is a RESTful system that should be usable by any programming language capable of making HTTPS requests. Client SDKs for a variety of programming languages can be generated from the Looker API's Swagger JSON metadata to streamline use of the Looker API in your applications. A client SDK for Ruby is available as an example. For more information, see [Looker API Client SDKs](https://looker.com/docs/r/api/client_sdks)  ### Try It Out!  The 'api-docs' page served by the Looker instance includes 'Try It Out!' buttons for each API method. After logging in with API3 credentials, you can use the \"Try It Out!\" buttons to call the API directly from the documentation page to interactively explore API features and responses.  ### Versioning  Future releases of Looker will expand this API release-by-release to securely expose more and more of the core power of Looker to API client applications. API endpoints marked as \"beta\" may receive breaking changes without warning. Stable (non-beta) API endpoints should not receive breaking changes in future releases. For more information, see [Looker API Versioning](https://looker.com/docs/r/api/versioning) 
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.AccessFilter;
import io.swagger.client.model.CredentialsApi;
import io.swagger.client.model.CredentialsApi3;
import io.swagger.client.model.CredentialsEmail;
import io.swagger.client.model.CredentialsEmbed;
import io.swagger.client.model.CredentialsGoogle;
import io.swagger.client.model.CredentialsLDAP;
import io.swagger.client.model.CredentialsLookerOpenid;
import io.swagger.client.model.CredentialsOIDC;
import io.swagger.client.model.CredentialsSaml;
import io.swagger.client.model.CredentialsTotp;
import io.swagger.client.model.Session;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * User
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-06-08T15:12:41.902+05:30")
public class User {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("first_name")
  private String firstName = null;

  @SerializedName("last_name")
  private String lastName = null;

  @SerializedName("display_name")
  private String displayName = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("is_disabled")
  private Boolean isDisabled = null;

  @SerializedName("avatar_url")
  private String avatarUrl = null;

  @SerializedName("home_space_id")
  private String homeSpaceId = null;

  @SerializedName("personal_space_id")
  private Long personalSpaceId = null;

  @SerializedName("embed_group_space_id")
  private Long embedGroupSpaceId = null;

  @SerializedName("access_filters")
  private List<AccessFilter> accessFilters = null;

  @SerializedName("credentials_email")
  private CredentialsEmail credentialsEmail = null;

  @SerializedName("credentials_totp")
  private CredentialsTotp credentialsTotp = null;

  @SerializedName("credentials_ldap")
  private CredentialsLDAP credentialsLdap = null;

  @SerializedName("credentials_google")
  private CredentialsGoogle credentialsGoogle = null;

  @SerializedName("credentials_saml")
  private CredentialsSaml credentialsSaml = null;

  @SerializedName("credentials_oidc")
  private CredentialsOIDC credentialsOidc = null;

  @SerializedName("credentials_api")
  private CredentialsApi credentialsApi = null;

  @SerializedName("credentials_api3")
  private List<CredentialsApi3> credentialsApi3 = null;

  @SerializedName("credentials_embed")
  private List<CredentialsEmbed> credentialsEmbed = null;

  @SerializedName("credentials_looker_openid")
  private CredentialsLookerOpenid credentialsLookerOpenid = null;

  @SerializedName("sessions")
  private List<Session> sessions = null;

  @SerializedName("role_ids")
  private List<Long> roleIds = null;

  @SerializedName("group_ids")
  private List<Long> groupIds = null;

  @SerializedName("presumed_looker_employee")
  private Boolean presumedLookerEmployee = null;

  @SerializedName("verified_looker_employee")
  private Boolean verifiedLookerEmployee = null;

  @SerializedName("looker_versions")
  private List<String> lookerVersions = null;

  @SerializedName("ui_state")
  private Map<String, String> uiState = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("can")
  private Map<String, Boolean> can = null;

   /**
   * Unique Id
   * @return id
  **/
  @ApiModelProperty(value = "Unique Id")
  public Long getId() {
    return id;
  }

  public User firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * First name
   * @return firstName
  **/
  @ApiModelProperty(value = "First name")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public User lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * Last name
   * @return lastName
  **/
  @ApiModelProperty(value = "Last name")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

   /**
   * Full name for display (available only if both first_name and last_name are set)
   * @return displayName
  **/
  @ApiModelProperty(value = "Full name for display (available only if both first_name and last_name are set)")
  public String getDisplayName() {
    return displayName;
  }

   /**
   * EMail address
   * @return email
  **/
  @ApiModelProperty(value = "EMail address")
  public String getEmail() {
    return email;
  }

  public User isDisabled(Boolean isDisabled) {
    this.isDisabled = isDisabled;
    return this;
  }

   /**
   * Account has been disabled
   * @return isDisabled
  **/
  @ApiModelProperty(value = "Account has been disabled")
  public Boolean isIsDisabled() {
    return isDisabled;
  }

  public void setIsDisabled(Boolean isDisabled) {
    this.isDisabled = isDisabled;
  }

   /**
   * URL for the avatar image (may be generic)
   * @return avatarUrl
  **/
  @ApiModelProperty(value = "URL for the avatar image (may be generic)")
  public String getAvatarUrl() {
    return avatarUrl;
  }

  public User homeSpaceId(String homeSpaceId) {
    this.homeSpaceId = homeSpaceId;
    return this;
  }

   /**
   * ID string for user&#39;s home space
   * @return homeSpaceId
  **/
  @ApiModelProperty(value = "ID string for user's home space")
  public String getHomeSpaceId() {
    return homeSpaceId;
  }

  public void setHomeSpaceId(String homeSpaceId) {
    this.homeSpaceId = homeSpaceId;
  }

   /**
   * ID of user&#39;s personal space
   * @return personalSpaceId
  **/
  @ApiModelProperty(value = "ID of user's personal space")
  public Long getPersonalSpaceId() {
    return personalSpaceId;
  }

   /**
   * (Embed only) ID of user&#39;s group space based on the external_group_id optionally specified during embed user login
   * @return embedGroupSpaceId
  **/
  @ApiModelProperty(value = "(Embed only) ID of user's group space based on the external_group_id optionally specified during embed user login")
  public Long getEmbedGroupSpaceId() {
    return embedGroupSpaceId;
  }

  public User accessFilters(List<AccessFilter> accessFilters) {
    this.accessFilters = accessFilters;
    return this;
  }

  public User addAccessFiltersItem(AccessFilter accessFiltersItem) {
    if (this.accessFilters == null) {
      this.accessFilters = new ArrayList<AccessFilter>();
    }
    this.accessFilters.add(accessFiltersItem);
    return this;
  }

   /**
   * Model access filters.
   * @return accessFilters
  **/
  @ApiModelProperty(value = "Model access filters.")
  public List<AccessFilter> getAccessFilters() {
    return accessFilters;
  }

  public void setAccessFilters(List<AccessFilter> accessFilters) {
    this.accessFilters = accessFilters;
  }

  public User credentialsEmail(CredentialsEmail credentialsEmail) {
    this.credentialsEmail = credentialsEmail;
    return this;
  }

   /**
   * Email/Password login credentials
   * @return credentialsEmail
  **/
  @ApiModelProperty(value = "Email/Password login credentials")
  public CredentialsEmail getCredentialsEmail() {
    return credentialsEmail;
  }

  public void setCredentialsEmail(CredentialsEmail credentialsEmail) {
    this.credentialsEmail = credentialsEmail;
  }

  public User credentialsTotp(CredentialsTotp credentialsTotp) {
    this.credentialsTotp = credentialsTotp;
    return this;
  }

   /**
   * Two-factor credentials
   * @return credentialsTotp
  **/
  @ApiModelProperty(value = "Two-factor credentials")
  public CredentialsTotp getCredentialsTotp() {
    return credentialsTotp;
  }

  public void setCredentialsTotp(CredentialsTotp credentialsTotp) {
    this.credentialsTotp = credentialsTotp;
  }

  public User credentialsLdap(CredentialsLDAP credentialsLdap) {
    this.credentialsLdap = credentialsLdap;
    return this;
  }

   /**
   * LDAP credentials
   * @return credentialsLdap
  **/
  @ApiModelProperty(value = "LDAP credentials")
  public CredentialsLDAP getCredentialsLdap() {
    return credentialsLdap;
  }

  public void setCredentialsLdap(CredentialsLDAP credentialsLdap) {
    this.credentialsLdap = credentialsLdap;
  }

  public User credentialsGoogle(CredentialsGoogle credentialsGoogle) {
    this.credentialsGoogle = credentialsGoogle;
    return this;
  }

   /**
   * Google auth credentials
   * @return credentialsGoogle
  **/
  @ApiModelProperty(value = "Google auth credentials")
  public CredentialsGoogle getCredentialsGoogle() {
    return credentialsGoogle;
  }

  public void setCredentialsGoogle(CredentialsGoogle credentialsGoogle) {
    this.credentialsGoogle = credentialsGoogle;
  }

  public User credentialsSaml(CredentialsSaml credentialsSaml) {
    this.credentialsSaml = credentialsSaml;
    return this;
  }

   /**
   * Saml auth credentials
   * @return credentialsSaml
  **/
  @ApiModelProperty(value = "Saml auth credentials")
  public CredentialsSaml getCredentialsSaml() {
    return credentialsSaml;
  }

  public void setCredentialsSaml(CredentialsSaml credentialsSaml) {
    this.credentialsSaml = credentialsSaml;
  }

  public User credentialsOidc(CredentialsOIDC credentialsOidc) {
    this.credentialsOidc = credentialsOidc;
    return this;
  }

   /**
   * OpenID Connect auth credentials
   * @return credentialsOidc
  **/
  @ApiModelProperty(value = "OpenID Connect auth credentials")
  public CredentialsOIDC getCredentialsOidc() {
    return credentialsOidc;
  }

  public void setCredentialsOidc(CredentialsOIDC credentialsOidc) {
    this.credentialsOidc = credentialsOidc;
  }

  public User credentialsApi(CredentialsApi credentialsApi) {
    this.credentialsApi = credentialsApi;
    return this;
  }

   /**
   * API user credentials
   * @return credentialsApi
  **/
  @ApiModelProperty(value = "API user credentials")
  public CredentialsApi getCredentialsApi() {
    return credentialsApi;
  }

  public void setCredentialsApi(CredentialsApi credentialsApi) {
    this.credentialsApi = credentialsApi;
  }

  public User credentialsApi3(List<CredentialsApi3> credentialsApi3) {
    this.credentialsApi3 = credentialsApi3;
    return this;
  }

  public User addCredentialsApi3Item(CredentialsApi3 credentialsApi3Item) {
    if (this.credentialsApi3 == null) {
      this.credentialsApi3 = new ArrayList<CredentialsApi3>();
    }
    this.credentialsApi3.add(credentialsApi3Item);
    return this;
  }

   /**
   * API 3 credentials
   * @return credentialsApi3
  **/
  @ApiModelProperty(value = "API 3 credentials")
  public List<CredentialsApi3> getCredentialsApi3() {
    return credentialsApi3;
  }

  public void setCredentialsApi3(List<CredentialsApi3> credentialsApi3) {
    this.credentialsApi3 = credentialsApi3;
  }

  public User credentialsEmbed(List<CredentialsEmbed> credentialsEmbed) {
    this.credentialsEmbed = credentialsEmbed;
    return this;
  }

  public User addCredentialsEmbedItem(CredentialsEmbed credentialsEmbedItem) {
    if (this.credentialsEmbed == null) {
      this.credentialsEmbed = new ArrayList<CredentialsEmbed>();
    }
    this.credentialsEmbed.add(credentialsEmbedItem);
    return this;
  }

   /**
   * Embed credentials
   * @return credentialsEmbed
  **/
  @ApiModelProperty(value = "Embed credentials")
  public List<CredentialsEmbed> getCredentialsEmbed() {
    return credentialsEmbed;
  }

  public void setCredentialsEmbed(List<CredentialsEmbed> credentialsEmbed) {
    this.credentialsEmbed = credentialsEmbed;
  }

  public User credentialsLookerOpenid(CredentialsLookerOpenid credentialsLookerOpenid) {
    this.credentialsLookerOpenid = credentialsLookerOpenid;
    return this;
  }

   /**
   * LookerOpenID credentials. Used for login by Looker Analysts
   * @return credentialsLookerOpenid
  **/
  @ApiModelProperty(value = "LookerOpenID credentials. Used for login by Looker Analysts")
  public CredentialsLookerOpenid getCredentialsLookerOpenid() {
    return credentialsLookerOpenid;
  }

  public void setCredentialsLookerOpenid(CredentialsLookerOpenid credentialsLookerOpenid) {
    this.credentialsLookerOpenid = credentialsLookerOpenid;
  }

  public User sessions(List<Session> sessions) {
    this.sessions = sessions;
    return this;
  }

  public User addSessionsItem(Session sessionsItem) {
    if (this.sessions == null) {
      this.sessions = new ArrayList<Session>();
    }
    this.sessions.add(sessionsItem);
    return this;
  }

   /**
   * Active sessions
   * @return sessions
  **/
  @ApiModelProperty(value = "Active sessions")
  public List<Session> getSessions() {
    return sessions;
  }

  public void setSessions(List<Session> sessions) {
    this.sessions = sessions;
  }

  public User roleIds(List<Long> roleIds) {
    this.roleIds = roleIds;
    return this;
  }

  public User addRoleIdsItem(Long roleIdsItem) {
    if (this.roleIds == null) {
      this.roleIds = new ArrayList<Long>();
    }
    this.roleIds.add(roleIdsItem);
    return this;
  }

   /**
   * Array of ids of the roles for this user
   * @return roleIds
  **/
  @ApiModelProperty(value = "Array of ids of the roles for this user")
  public List<Long> getRoleIds() {
    return roleIds;
  }

  public void setRoleIds(List<Long> roleIds) {
    this.roleIds = roleIds;
  }

  public User groupIds(List<Long> groupIds) {
    this.groupIds = groupIds;
    return this;
  }

  public User addGroupIdsItem(Long groupIdsItem) {
    if (this.groupIds == null) {
      this.groupIds = new ArrayList<Long>();
    }
    this.groupIds.add(groupIdsItem);
    return this;
  }

   /**
   * Array of ids of the groups for this user
   * @return groupIds
  **/
  @ApiModelProperty(value = "Array of ids of the groups for this user")
  public List<Long> getGroupIds() {
    return groupIds;
  }

  public void setGroupIds(List<Long> groupIds) {
    this.groupIds = groupIds;
  }

   /**
   * User is identified as an employee of Looker
   * @return presumedLookerEmployee
  **/
  @ApiModelProperty(value = "User is identified as an employee of Looker")
  public Boolean isPresumedLookerEmployee() {
    return presumedLookerEmployee;
  }

   /**
   * User is identified as an employee of Looker who has been verified via Looker corporate authentication
   * @return verifiedLookerEmployee
  **/
  @ApiModelProperty(value = "User is identified as an employee of Looker who has been verified via Looker corporate authentication")
  public Boolean isVerifiedLookerEmployee() {
    return verifiedLookerEmployee;
  }

  public User lookerVersions(List<String> lookerVersions) {
    this.lookerVersions = lookerVersions;
    return this;
  }

  public User addLookerVersionsItem(String lookerVersionsItem) {
    if (this.lookerVersions == null) {
      this.lookerVersions = new ArrayList<String>();
    }
    this.lookerVersions.add(lookerVersionsItem);
    return this;
  }

   /**
   * Array of strings representing the Looker versions that this user has used (this only goes back as far as &#39;3.54.0&#39;)
   * @return lookerVersions
  **/
  @ApiModelProperty(value = "Array of strings representing the Looker versions that this user has used (this only goes back as far as '3.54.0')")
  public List<String> getLookerVersions() {
    return lookerVersions;
  }

  public void setLookerVersions(List<String> lookerVersions) {
    this.lookerVersions = lookerVersions;
  }

  public User uiState(Map<String, String> uiState) {
    this.uiState = uiState;
    return this;
  }

  public User putUiStateItem(String key, String uiStateItem) {
    if (this.uiState == null) {
      this.uiState = new HashMap<String, String>();
    }
    this.uiState.put(key, uiStateItem);
    return this;
  }

   /**
   * Per user dictionary of undocumented state information owned by the Looker UI.
   * @return uiState
  **/
  @ApiModelProperty(value = "Per user dictionary of undocumented state information owned by the Looker UI.")
  public Map<String, String> getUiState() {
    return uiState;
  }

  public void setUiState(Map<String, String> uiState) {
    this.uiState = uiState;
  }

   /**
   * Link to get this item
   * @return url
  **/
  @ApiModelProperty(value = "Link to get this item")
  public String getUrl() {
    return url;
  }

  public User can(Map<String, Boolean> can) {
    this.can = can;
    return this;
  }

  public User putCanItem(String key, Boolean canItem) {
    if (this.can == null) {
      this.can = new HashMap<String, Boolean>();
    }
    this.can.put(key, canItem);
    return this;
  }

   /**
   * Operations the current user is able to perform on this object
   * @return can
  **/
  @ApiModelProperty(value = "Operations the current user is able to perform on this object")
  public Map<String, Boolean> getCan() {
    return can;
  }

  public void setCan(Map<String, Boolean> can) {
    this.can = can;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    User user = (User) o;
    return Objects.equals(this.id, user.id) &&
        Objects.equals(this.firstName, user.firstName) &&
        Objects.equals(this.lastName, user.lastName) &&
        Objects.equals(this.displayName, user.displayName) &&
        Objects.equals(this.email, user.email) &&
        Objects.equals(this.isDisabled, user.isDisabled) &&
        Objects.equals(this.avatarUrl, user.avatarUrl) &&
        Objects.equals(this.homeSpaceId, user.homeSpaceId) &&
        Objects.equals(this.personalSpaceId, user.personalSpaceId) &&
        Objects.equals(this.embedGroupSpaceId, user.embedGroupSpaceId) &&
        Objects.equals(this.accessFilters, user.accessFilters) &&
        Objects.equals(this.credentialsEmail, user.credentialsEmail) &&
        Objects.equals(this.credentialsTotp, user.credentialsTotp) &&
        Objects.equals(this.credentialsLdap, user.credentialsLdap) &&
        Objects.equals(this.credentialsGoogle, user.credentialsGoogle) &&
        Objects.equals(this.credentialsSaml, user.credentialsSaml) &&
        Objects.equals(this.credentialsOidc, user.credentialsOidc) &&
        Objects.equals(this.credentialsApi, user.credentialsApi) &&
        Objects.equals(this.credentialsApi3, user.credentialsApi3) &&
        Objects.equals(this.credentialsEmbed, user.credentialsEmbed) &&
        Objects.equals(this.credentialsLookerOpenid, user.credentialsLookerOpenid) &&
        Objects.equals(this.sessions, user.sessions) &&
        Objects.equals(this.roleIds, user.roleIds) &&
        Objects.equals(this.groupIds, user.groupIds) &&
        Objects.equals(this.presumedLookerEmployee, user.presumedLookerEmployee) &&
        Objects.equals(this.verifiedLookerEmployee, user.verifiedLookerEmployee) &&
        Objects.equals(this.lookerVersions, user.lookerVersions) &&
        Objects.equals(this.uiState, user.uiState) &&
        Objects.equals(this.url, user.url) &&
        Objects.equals(this.can, user.can);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, firstName, lastName, displayName, email, isDisabled, avatarUrl, homeSpaceId, personalSpaceId, embedGroupSpaceId, accessFilters, credentialsEmail, credentialsTotp, credentialsLdap, credentialsGoogle, credentialsSaml, credentialsOidc, credentialsApi, credentialsApi3, credentialsEmbed, credentialsLookerOpenid, sessions, roleIds, groupIds, presumedLookerEmployee, verifiedLookerEmployee, lookerVersions, uiState, url, can);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class User {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    isDisabled: ").append(toIndentedString(isDisabled)).append("\n");
    sb.append("    avatarUrl: ").append(toIndentedString(avatarUrl)).append("\n");
    sb.append("    homeSpaceId: ").append(toIndentedString(homeSpaceId)).append("\n");
    sb.append("    personalSpaceId: ").append(toIndentedString(personalSpaceId)).append("\n");
    sb.append("    embedGroupSpaceId: ").append(toIndentedString(embedGroupSpaceId)).append("\n");
    sb.append("    accessFilters: ").append(toIndentedString(accessFilters)).append("\n");
    sb.append("    credentialsEmail: ").append(toIndentedString(credentialsEmail)).append("\n");
    sb.append("    credentialsTotp: ").append(toIndentedString(credentialsTotp)).append("\n");
    sb.append("    credentialsLdap: ").append(toIndentedString(credentialsLdap)).append("\n");
    sb.append("    credentialsGoogle: ").append(toIndentedString(credentialsGoogle)).append("\n");
    sb.append("    credentialsSaml: ").append(toIndentedString(credentialsSaml)).append("\n");
    sb.append("    credentialsOidc: ").append(toIndentedString(credentialsOidc)).append("\n");
    sb.append("    credentialsApi: ").append(toIndentedString(credentialsApi)).append("\n");
    sb.append("    credentialsApi3: ").append(toIndentedString(credentialsApi3)).append("\n");
    sb.append("    credentialsEmbed: ").append(toIndentedString(credentialsEmbed)).append("\n");
    sb.append("    credentialsLookerOpenid: ").append(toIndentedString(credentialsLookerOpenid)).append("\n");
    sb.append("    sessions: ").append(toIndentedString(sessions)).append("\n");
    sb.append("    roleIds: ").append(toIndentedString(roleIds)).append("\n");
    sb.append("    groupIds: ").append(toIndentedString(groupIds)).append("\n");
    sb.append("    presumedLookerEmployee: ").append(toIndentedString(presumedLookerEmployee)).append("\n");
    sb.append("    verifiedLookerEmployee: ").append(toIndentedString(verifiedLookerEmployee)).append("\n");
    sb.append("    lookerVersions: ").append(toIndentedString(lookerVersions)).append("\n");
    sb.append("    uiState: ").append(toIndentedString(uiState)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    can: ").append(toIndentedString(can)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

