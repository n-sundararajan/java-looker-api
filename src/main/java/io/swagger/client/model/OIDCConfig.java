/*
 * Looker API 3.0 Reference
 * ### Authorization  The Looker API uses Looker **API3** credentials for authorization and access control. Looker admins can create API3 credentials on Looker's **Admin/Users** page. Pass API3 credentials to the **_/login** endpoint to obtain a temporary access_token. Include that access_token in the Authorization header of Looker API requests. For details, see [Looker API Authorization](https://looker.com/docs/r/api/authorization)  ### Client SDKs  The Looker API is a RESTful system that should be usable by any programming language capable of making HTTPS requests. Client SDKs for a variety of programming languages can be generated from the Looker API's Swagger JSON metadata to streamline use of the Looker API in your applications. A client SDK for Ruby is available as an example. For more information, see [Looker API Client SDKs](https://looker.com/docs/r/api/client_sdks)  ### Try It Out!  The 'api-docs' page served by the Looker instance includes 'Try It Out!' buttons for each API method. After logging in with API3 credentials, you can use the \"Try It Out!\" buttons to call the API directly from the documentation page to interactively explore API features and responses.  ### Versioning  Future releases of Looker will expand this API release-by-release to securely expose more and more of the core power of Looker to API client applications. API endpoints marked as \"beta\" may receive breaking changes without warning. Stable (non-beta) API endpoints should not receive breaking changes in future releases. For more information, see [Looker API Versioning](https://looker.com/docs/r/api/versioning) 
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Group;
import io.swagger.client.model.OIDCGroupRead;
import io.swagger.client.model.OIDCGroupWrite;
import io.swagger.client.model.OIDCUserAttributeRead;
import io.swagger.client.model.OIDCUserAttributeWrite;
import io.swagger.client.model.Role;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * OIDCConfig
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-06-08T15:12:41.902+05:30")
public class OIDCConfig {
  @SerializedName("enabled")
  private Boolean enabled = null;

  @SerializedName("identifier")
  private String identifier = null;

  @SerializedName("secret")
  private String secret = null;

  @SerializedName("scopes")
  private List<String> scopes = null;

  @SerializedName("issuer")
  private String issuer = null;

  @SerializedName("audience")
  private String audience = null;

  @SerializedName("authorization_endpoint")
  private String authorizationEndpoint = null;

  @SerializedName("token_endpoint")
  private String tokenEndpoint = null;

  @SerializedName("userinfo_endpoint")
  private String userinfoEndpoint = null;

  @SerializedName("user_attribute_map_email")
  private String userAttributeMapEmail = null;

  @SerializedName("user_attribute_map_first_name")
  private String userAttributeMapFirstName = null;

  @SerializedName("user_attribute_map_last_name")
  private String userAttributeMapLastName = null;

  @SerializedName("new_user_migration_types")
  private String newUserMigrationTypes = null;

  @SerializedName("alternate_email_login_allowed")
  private Boolean alternateEmailLoginAllowed = null;

  @SerializedName("test_slug")
  private String testSlug = null;

  @SerializedName("modified_at")
  private String modifiedAt = null;

  @SerializedName("modified_by")
  private String modifiedBy = null;

  @SerializedName("default_new_user_roles")
  private List<Role> defaultNewUserRoles = null;

  @SerializedName("default_new_user_groups")
  private List<Group> defaultNewUserGroups = null;

  @SerializedName("default_new_user_role_ids")
  private List<Long> defaultNewUserRoleIds = null;

  @SerializedName("default_new_user_group_ids")
  private List<Long> defaultNewUserGroupIds = null;

  @SerializedName("set_roles_from_groups")
  private Boolean setRolesFromGroups = null;

  @SerializedName("groups_attribute")
  private String groupsAttribute = null;

  @SerializedName("groups")
  private List<OIDCGroupRead> groups = null;

  @SerializedName("groups_with_role_ids")
  private List<OIDCGroupWrite> groupsWithRoleIds = null;

  @SerializedName("auth_requires_role")
  private Boolean authRequiresRole = null;

  @SerializedName("user_attributes")
  private List<OIDCUserAttributeRead> userAttributes = null;

  @SerializedName("user_attributes_with_ids")
  private List<OIDCUserAttributeWrite> userAttributesWithIds = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("can")
  private Map<String, Boolean> can = null;

  public OIDCConfig enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Enable/Disable OIDC authentication for the server
   * @return enabled
  **/
  @ApiModelProperty(value = "Enable/Disable OIDC authentication for the server")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public OIDCConfig identifier(String identifier) {
    this.identifier = identifier;
    return this;
  }

   /**
   * Relying Party Identifier (provided by OpenID Provider)
   * @return identifier
  **/
  @ApiModelProperty(value = "Relying Party Identifier (provided by OpenID Provider)")
  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }

  public OIDCConfig secret(String secret) {
    this.secret = secret;
    return this;
  }

   /**
   * (Write-Only) Relying Party Secret (provided by OpenID Provider)
   * @return secret
  **/
  @ApiModelProperty(value = "(Write-Only) Relying Party Secret (provided by OpenID Provider)")
  public String getSecret() {
    return secret;
  }

  public void setSecret(String secret) {
    this.secret = secret;
  }

  public OIDCConfig scopes(List<String> scopes) {
    this.scopes = scopes;
    return this;
  }

  public OIDCConfig addScopesItem(String scopesItem) {
    if (this.scopes == null) {
      this.scopes = new ArrayList<String>();
    }
    this.scopes.add(scopesItem);
    return this;
  }

   /**
   * Array of scopes to request.
   * @return scopes
  **/
  @ApiModelProperty(value = "Array of scopes to request.")
  public List<String> getScopes() {
    return scopes;
  }

  public void setScopes(List<String> scopes) {
    this.scopes = scopes;
  }

  public OIDCConfig issuer(String issuer) {
    this.issuer = issuer;
    return this;
  }

   /**
   * OpenID Provider Issuer
   * @return issuer
  **/
  @ApiModelProperty(value = "OpenID Provider Issuer")
  public String getIssuer() {
    return issuer;
  }

  public void setIssuer(String issuer) {
    this.issuer = issuer;
  }

  public OIDCConfig audience(String audience) {
    this.audience = audience;
    return this;
  }

   /**
   * OpenID Provider Audience
   * @return audience
  **/
  @ApiModelProperty(value = "OpenID Provider Audience")
  public String getAudience() {
    return audience;
  }

  public void setAudience(String audience) {
    this.audience = audience;
  }

  public OIDCConfig authorizationEndpoint(String authorizationEndpoint) {
    this.authorizationEndpoint = authorizationEndpoint;
    return this;
  }

   /**
   * OpenID Provider Authorization Url
   * @return authorizationEndpoint
  **/
  @ApiModelProperty(value = "OpenID Provider Authorization Url")
  public String getAuthorizationEndpoint() {
    return authorizationEndpoint;
  }

  public void setAuthorizationEndpoint(String authorizationEndpoint) {
    this.authorizationEndpoint = authorizationEndpoint;
  }

  public OIDCConfig tokenEndpoint(String tokenEndpoint) {
    this.tokenEndpoint = tokenEndpoint;
    return this;
  }

   /**
   * OpenID Provider Token Url
   * @return tokenEndpoint
  **/
  @ApiModelProperty(value = "OpenID Provider Token Url")
  public String getTokenEndpoint() {
    return tokenEndpoint;
  }

  public void setTokenEndpoint(String tokenEndpoint) {
    this.tokenEndpoint = tokenEndpoint;
  }

  public OIDCConfig userinfoEndpoint(String userinfoEndpoint) {
    this.userinfoEndpoint = userinfoEndpoint;
    return this;
  }

   /**
   * OpenID Provider User Information Url
   * @return userinfoEndpoint
  **/
  @ApiModelProperty(value = "OpenID Provider User Information Url")
  public String getUserinfoEndpoint() {
    return userinfoEndpoint;
  }

  public void setUserinfoEndpoint(String userinfoEndpoint) {
    this.userinfoEndpoint = userinfoEndpoint;
  }

  public OIDCConfig userAttributeMapEmail(String userAttributeMapEmail) {
    this.userAttributeMapEmail = userAttributeMapEmail;
    return this;
  }

   /**
   * Name of user record attributes used to indicate email address field
   * @return userAttributeMapEmail
  **/
  @ApiModelProperty(value = "Name of user record attributes used to indicate email address field")
  public String getUserAttributeMapEmail() {
    return userAttributeMapEmail;
  }

  public void setUserAttributeMapEmail(String userAttributeMapEmail) {
    this.userAttributeMapEmail = userAttributeMapEmail;
  }

  public OIDCConfig userAttributeMapFirstName(String userAttributeMapFirstName) {
    this.userAttributeMapFirstName = userAttributeMapFirstName;
    return this;
  }

   /**
   * Name of user record attributes used to indicate first name
   * @return userAttributeMapFirstName
  **/
  @ApiModelProperty(value = "Name of user record attributes used to indicate first name")
  public String getUserAttributeMapFirstName() {
    return userAttributeMapFirstName;
  }

  public void setUserAttributeMapFirstName(String userAttributeMapFirstName) {
    this.userAttributeMapFirstName = userAttributeMapFirstName;
  }

  public OIDCConfig userAttributeMapLastName(String userAttributeMapLastName) {
    this.userAttributeMapLastName = userAttributeMapLastName;
    return this;
  }

   /**
   * Name of user record attributes used to indicate last name
   * @return userAttributeMapLastName
  **/
  @ApiModelProperty(value = "Name of user record attributes used to indicate last name")
  public String getUserAttributeMapLastName() {
    return userAttributeMapLastName;
  }

  public void setUserAttributeMapLastName(String userAttributeMapLastName) {
    this.userAttributeMapLastName = userAttributeMapLastName;
  }

  public OIDCConfig newUserMigrationTypes(String newUserMigrationTypes) {
    this.newUserMigrationTypes = newUserMigrationTypes;
    return this;
  }

   /**
   * Merge first-time oidc login to existing user account by email addresses. When a user logs in for the first time via oidc this option will connect this user into their existing account by finding the account with a matching email address by testing the given types of credentials for existing users. Otherwise a new user account will be created for the user. This list (if provided) must be a comma separated list of string like &#39;email,ldap,google&#39;
   * @return newUserMigrationTypes
  **/
  @ApiModelProperty(value = "Merge first-time oidc login to existing user account by email addresses. When a user logs in for the first time via oidc this option will connect this user into their existing account by finding the account with a matching email address by testing the given types of credentials for existing users. Otherwise a new user account will be created for the user. This list (if provided) must be a comma separated list of string like 'email,ldap,google'")
  public String getNewUserMigrationTypes() {
    return newUserMigrationTypes;
  }

  public void setNewUserMigrationTypes(String newUserMigrationTypes) {
    this.newUserMigrationTypes = newUserMigrationTypes;
  }

  public OIDCConfig alternateEmailLoginAllowed(Boolean alternateEmailLoginAllowed) {
    this.alternateEmailLoginAllowed = alternateEmailLoginAllowed;
    return this;
  }

   /**
   * Allow alternate email-based login via &#39;/login/email&#39; for admins and for specified users with the &#39;login_special_email&#39; permission. This option is useful as a fallback during ldap setup, if ldap config problems occur later, or if you need to support some users who are not in your ldap directory. Looker email/password logins are always disabled for regular users when ldap is enabled.
   * @return alternateEmailLoginAllowed
  **/
  @ApiModelProperty(value = "Allow alternate email-based login via '/login/email' for admins and for specified users with the 'login_special_email' permission. This option is useful as a fallback during ldap setup, if ldap config problems occur later, or if you need to support some users who are not in your ldap directory. Looker email/password logins are always disabled for regular users when ldap is enabled.")
  public Boolean isAlternateEmailLoginAllowed() {
    return alternateEmailLoginAllowed;
  }

  public void setAlternateEmailLoginAllowed(Boolean alternateEmailLoginAllowed) {
    this.alternateEmailLoginAllowed = alternateEmailLoginAllowed;
  }

   /**
   * Slug to identify configurations that are created in order to run a OIDC config test
   * @return testSlug
  **/
  @ApiModelProperty(value = "Slug to identify configurations that are created in order to run a OIDC config test")
  public String getTestSlug() {
    return testSlug;
  }

   /**
   * When this config was last modified
   * @return modifiedAt
  **/
  @ApiModelProperty(value = "When this config was last modified")
  public String getModifiedAt() {
    return modifiedAt;
  }

   /**
   * User id of user who last modified this config
   * @return modifiedBy
  **/
  @ApiModelProperty(value = "User id of user who last modified this config")
  public String getModifiedBy() {
    return modifiedBy;
  }

  public OIDCConfig defaultNewUserRoles(List<Role> defaultNewUserRoles) {
    this.defaultNewUserRoles = defaultNewUserRoles;
    return this;
  }

  public OIDCConfig addDefaultNewUserRolesItem(Role defaultNewUserRolesItem) {
    if (this.defaultNewUserRoles == null) {
      this.defaultNewUserRoles = new ArrayList<Role>();
    }
    this.defaultNewUserRoles.add(defaultNewUserRolesItem);
    return this;
  }

   /**
   * (Read-only) Roles that will be applied to new users the first time they login via OIDC
   * @return defaultNewUserRoles
  **/
  @ApiModelProperty(value = "(Read-only) Roles that will be applied to new users the first time they login via OIDC")
  public List<Role> getDefaultNewUserRoles() {
    return defaultNewUserRoles;
  }

  public void setDefaultNewUserRoles(List<Role> defaultNewUserRoles) {
    this.defaultNewUserRoles = defaultNewUserRoles;
  }

  public OIDCConfig defaultNewUserGroups(List<Group> defaultNewUserGroups) {
    this.defaultNewUserGroups = defaultNewUserGroups;
    return this;
  }

  public OIDCConfig addDefaultNewUserGroupsItem(Group defaultNewUserGroupsItem) {
    if (this.defaultNewUserGroups == null) {
      this.defaultNewUserGroups = new ArrayList<Group>();
    }
    this.defaultNewUserGroups.add(defaultNewUserGroupsItem);
    return this;
  }

   /**
   * (Read-only) Groups that will be applied to new users the first time they login via OIDC
   * @return defaultNewUserGroups
  **/
  @ApiModelProperty(value = "(Read-only) Groups that will be applied to new users the first time they login via OIDC")
  public List<Group> getDefaultNewUserGroups() {
    return defaultNewUserGroups;
  }

  public void setDefaultNewUserGroups(List<Group> defaultNewUserGroups) {
    this.defaultNewUserGroups = defaultNewUserGroups;
  }

  public OIDCConfig defaultNewUserRoleIds(List<Long> defaultNewUserRoleIds) {
    this.defaultNewUserRoleIds = defaultNewUserRoleIds;
    return this;
  }

  public OIDCConfig addDefaultNewUserRoleIdsItem(Long defaultNewUserRoleIdsItem) {
    if (this.defaultNewUserRoleIds == null) {
      this.defaultNewUserRoleIds = new ArrayList<Long>();
    }
    this.defaultNewUserRoleIds.add(defaultNewUserRoleIdsItem);
    return this;
  }

   /**
   * (Write-Only) Array of ids of roles that will be applied to new users the first time they login via OIDC
   * @return defaultNewUserRoleIds
  **/
  @ApiModelProperty(value = "(Write-Only) Array of ids of roles that will be applied to new users the first time they login via OIDC")
  public List<Long> getDefaultNewUserRoleIds() {
    return defaultNewUserRoleIds;
  }

  public void setDefaultNewUserRoleIds(List<Long> defaultNewUserRoleIds) {
    this.defaultNewUserRoleIds = defaultNewUserRoleIds;
  }

  public OIDCConfig defaultNewUserGroupIds(List<Long> defaultNewUserGroupIds) {
    this.defaultNewUserGroupIds = defaultNewUserGroupIds;
    return this;
  }

  public OIDCConfig addDefaultNewUserGroupIdsItem(Long defaultNewUserGroupIdsItem) {
    if (this.defaultNewUserGroupIds == null) {
      this.defaultNewUserGroupIds = new ArrayList<Long>();
    }
    this.defaultNewUserGroupIds.add(defaultNewUserGroupIdsItem);
    return this;
  }

   /**
   * (Write-Only) Array of ids of groups that will be applied to new users the first time they login via OIDC
   * @return defaultNewUserGroupIds
  **/
  @ApiModelProperty(value = "(Write-Only) Array of ids of groups that will be applied to new users the first time they login via OIDC")
  public List<Long> getDefaultNewUserGroupIds() {
    return defaultNewUserGroupIds;
  }

  public void setDefaultNewUserGroupIds(List<Long> defaultNewUserGroupIds) {
    this.defaultNewUserGroupIds = defaultNewUserGroupIds;
  }

  public OIDCConfig setRolesFromGroups(Boolean setRolesFromGroups) {
    this.setRolesFromGroups = setRolesFromGroups;
    return this;
  }

   /**
   * Set user roles in Looker based on groups from OIDC
   * @return setRolesFromGroups
  **/
  @ApiModelProperty(value = "Set user roles in Looker based on groups from OIDC")
  public Boolean isSetRolesFromGroups() {
    return setRolesFromGroups;
  }

  public void setSetRolesFromGroups(Boolean setRolesFromGroups) {
    this.setRolesFromGroups = setRolesFromGroups;
  }

  public OIDCConfig groupsAttribute(String groupsAttribute) {
    this.groupsAttribute = groupsAttribute;
    return this;
  }

   /**
   * Name of user record attributes used to indicate groups. Used when &#39;groups_finder_type&#39; is set to &#39;grouped_attribute_values&#39;
   * @return groupsAttribute
  **/
  @ApiModelProperty(value = "Name of user record attributes used to indicate groups. Used when 'groups_finder_type' is set to 'grouped_attribute_values'")
  public String getGroupsAttribute() {
    return groupsAttribute;
  }

  public void setGroupsAttribute(String groupsAttribute) {
    this.groupsAttribute = groupsAttribute;
  }

  public OIDCConfig groups(List<OIDCGroupRead> groups) {
    this.groups = groups;
    return this;
  }

  public OIDCConfig addGroupsItem(OIDCGroupRead groupsItem) {
    if (this.groups == null) {
      this.groups = new ArrayList<OIDCGroupRead>();
    }
    this.groups.add(groupsItem);
    return this;
  }

   /**
   * (Read-only) Array of mappings between OIDC Groups and Looker Roles
   * @return groups
  **/
  @ApiModelProperty(value = "(Read-only) Array of mappings between OIDC Groups and Looker Roles")
  public List<OIDCGroupRead> getGroups() {
    return groups;
  }

  public void setGroups(List<OIDCGroupRead> groups) {
    this.groups = groups;
  }

  public OIDCConfig groupsWithRoleIds(List<OIDCGroupWrite> groupsWithRoleIds) {
    this.groupsWithRoleIds = groupsWithRoleIds;
    return this;
  }

  public OIDCConfig addGroupsWithRoleIdsItem(OIDCGroupWrite groupsWithRoleIdsItem) {
    if (this.groupsWithRoleIds == null) {
      this.groupsWithRoleIds = new ArrayList<OIDCGroupWrite>();
    }
    this.groupsWithRoleIds.add(groupsWithRoleIdsItem);
    return this;
  }

   /**
   * (Read/Write) Array of mappings between OIDC Groups and arrays of Looker Role ids
   * @return groupsWithRoleIds
  **/
  @ApiModelProperty(value = "(Read/Write) Array of mappings between OIDC Groups and arrays of Looker Role ids")
  public List<OIDCGroupWrite> getGroupsWithRoleIds() {
    return groupsWithRoleIds;
  }

  public void setGroupsWithRoleIds(List<OIDCGroupWrite> groupsWithRoleIds) {
    this.groupsWithRoleIds = groupsWithRoleIds;
  }

  public OIDCConfig authRequiresRole(Boolean authRequiresRole) {
    this.authRequiresRole = authRequiresRole;
    return this;
  }

   /**
   * Users will not be allowed to login at all unless a role for them is found in OIDC if set to true
   * @return authRequiresRole
  **/
  @ApiModelProperty(value = "Users will not be allowed to login at all unless a role for them is found in OIDC if set to true")
  public Boolean isAuthRequiresRole() {
    return authRequiresRole;
  }

  public void setAuthRequiresRole(Boolean authRequiresRole) {
    this.authRequiresRole = authRequiresRole;
  }

  public OIDCConfig userAttributes(List<OIDCUserAttributeRead> userAttributes) {
    this.userAttributes = userAttributes;
    return this;
  }

  public OIDCConfig addUserAttributesItem(OIDCUserAttributeRead userAttributesItem) {
    if (this.userAttributes == null) {
      this.userAttributes = new ArrayList<OIDCUserAttributeRead>();
    }
    this.userAttributes.add(userAttributesItem);
    return this;
  }

   /**
   * (Read-only) Array of mappings between OIDC User Attributes and Looker User Attributes
   * @return userAttributes
  **/
  @ApiModelProperty(value = "(Read-only) Array of mappings between OIDC User Attributes and Looker User Attributes")
  public List<OIDCUserAttributeRead> getUserAttributes() {
    return userAttributes;
  }

  public void setUserAttributes(List<OIDCUserAttributeRead> userAttributes) {
    this.userAttributes = userAttributes;
  }

  public OIDCConfig userAttributesWithIds(List<OIDCUserAttributeWrite> userAttributesWithIds) {
    this.userAttributesWithIds = userAttributesWithIds;
    return this;
  }

  public OIDCConfig addUserAttributesWithIdsItem(OIDCUserAttributeWrite userAttributesWithIdsItem) {
    if (this.userAttributesWithIds == null) {
      this.userAttributesWithIds = new ArrayList<OIDCUserAttributeWrite>();
    }
    this.userAttributesWithIds.add(userAttributesWithIdsItem);
    return this;
  }

   /**
   * (Read/Write) Array of mappings between OIDC User Attributes and arrays of Looker User Attribute ids
   * @return userAttributesWithIds
  **/
  @ApiModelProperty(value = "(Read/Write) Array of mappings between OIDC User Attributes and arrays of Looker User Attribute ids")
  public List<OIDCUserAttributeWrite> getUserAttributesWithIds() {
    return userAttributesWithIds;
  }

  public void setUserAttributesWithIds(List<OIDCUserAttributeWrite> userAttributesWithIds) {
    this.userAttributesWithIds = userAttributesWithIds;
  }

   /**
   * Link to get this item
   * @return url
  **/
  @ApiModelProperty(value = "Link to get this item")
  public String getUrl() {
    return url;
  }

  public OIDCConfig can(Map<String, Boolean> can) {
    this.can = can;
    return this;
  }

  public OIDCConfig putCanItem(String key, Boolean canItem) {
    if (this.can == null) {
      this.can = new HashMap<String, Boolean>();
    }
    this.can.put(key, canItem);
    return this;
  }

   /**
   * Operations the current user is able to perform on this object
   * @return can
  **/
  @ApiModelProperty(value = "Operations the current user is able to perform on this object")
  public Map<String, Boolean> getCan() {
    return can;
  }

  public void setCan(Map<String, Boolean> can) {
    this.can = can;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OIDCConfig oiDCConfig = (OIDCConfig) o;
    return Objects.equals(this.enabled, oiDCConfig.enabled) &&
        Objects.equals(this.identifier, oiDCConfig.identifier) &&
        Objects.equals(this.secret, oiDCConfig.secret) &&
        Objects.equals(this.scopes, oiDCConfig.scopes) &&
        Objects.equals(this.issuer, oiDCConfig.issuer) &&
        Objects.equals(this.audience, oiDCConfig.audience) &&
        Objects.equals(this.authorizationEndpoint, oiDCConfig.authorizationEndpoint) &&
        Objects.equals(this.tokenEndpoint, oiDCConfig.tokenEndpoint) &&
        Objects.equals(this.userinfoEndpoint, oiDCConfig.userinfoEndpoint) &&
        Objects.equals(this.userAttributeMapEmail, oiDCConfig.userAttributeMapEmail) &&
        Objects.equals(this.userAttributeMapFirstName, oiDCConfig.userAttributeMapFirstName) &&
        Objects.equals(this.userAttributeMapLastName, oiDCConfig.userAttributeMapLastName) &&
        Objects.equals(this.newUserMigrationTypes, oiDCConfig.newUserMigrationTypes) &&
        Objects.equals(this.alternateEmailLoginAllowed, oiDCConfig.alternateEmailLoginAllowed) &&
        Objects.equals(this.testSlug, oiDCConfig.testSlug) &&
        Objects.equals(this.modifiedAt, oiDCConfig.modifiedAt) &&
        Objects.equals(this.modifiedBy, oiDCConfig.modifiedBy) &&
        Objects.equals(this.defaultNewUserRoles, oiDCConfig.defaultNewUserRoles) &&
        Objects.equals(this.defaultNewUserGroups, oiDCConfig.defaultNewUserGroups) &&
        Objects.equals(this.defaultNewUserRoleIds, oiDCConfig.defaultNewUserRoleIds) &&
        Objects.equals(this.defaultNewUserGroupIds, oiDCConfig.defaultNewUserGroupIds) &&
        Objects.equals(this.setRolesFromGroups, oiDCConfig.setRolesFromGroups) &&
        Objects.equals(this.groupsAttribute, oiDCConfig.groupsAttribute) &&
        Objects.equals(this.groups, oiDCConfig.groups) &&
        Objects.equals(this.groupsWithRoleIds, oiDCConfig.groupsWithRoleIds) &&
        Objects.equals(this.authRequiresRole, oiDCConfig.authRequiresRole) &&
        Objects.equals(this.userAttributes, oiDCConfig.userAttributes) &&
        Objects.equals(this.userAttributesWithIds, oiDCConfig.userAttributesWithIds) &&
        Objects.equals(this.url, oiDCConfig.url) &&
        Objects.equals(this.can, oiDCConfig.can);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enabled, identifier, secret, scopes, issuer, audience, authorizationEndpoint, tokenEndpoint, userinfoEndpoint, userAttributeMapEmail, userAttributeMapFirstName, userAttributeMapLastName, newUserMigrationTypes, alternateEmailLoginAllowed, testSlug, modifiedAt, modifiedBy, defaultNewUserRoles, defaultNewUserGroups, defaultNewUserRoleIds, defaultNewUserGroupIds, setRolesFromGroups, groupsAttribute, groups, groupsWithRoleIds, authRequiresRole, userAttributes, userAttributesWithIds, url, can);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OIDCConfig {\n");
    
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    secret: ").append(toIndentedString(secret)).append("\n");
    sb.append("    scopes: ").append(toIndentedString(scopes)).append("\n");
    sb.append("    issuer: ").append(toIndentedString(issuer)).append("\n");
    sb.append("    audience: ").append(toIndentedString(audience)).append("\n");
    sb.append("    authorizationEndpoint: ").append(toIndentedString(authorizationEndpoint)).append("\n");
    sb.append("    tokenEndpoint: ").append(toIndentedString(tokenEndpoint)).append("\n");
    sb.append("    userinfoEndpoint: ").append(toIndentedString(userinfoEndpoint)).append("\n");
    sb.append("    userAttributeMapEmail: ").append(toIndentedString(userAttributeMapEmail)).append("\n");
    sb.append("    userAttributeMapFirstName: ").append(toIndentedString(userAttributeMapFirstName)).append("\n");
    sb.append("    userAttributeMapLastName: ").append(toIndentedString(userAttributeMapLastName)).append("\n");
    sb.append("    newUserMigrationTypes: ").append(toIndentedString(newUserMigrationTypes)).append("\n");
    sb.append("    alternateEmailLoginAllowed: ").append(toIndentedString(alternateEmailLoginAllowed)).append("\n");
    sb.append("    testSlug: ").append(toIndentedString(testSlug)).append("\n");
    sb.append("    modifiedAt: ").append(toIndentedString(modifiedAt)).append("\n");
    sb.append("    modifiedBy: ").append(toIndentedString(modifiedBy)).append("\n");
    sb.append("    defaultNewUserRoles: ").append(toIndentedString(defaultNewUserRoles)).append("\n");
    sb.append("    defaultNewUserGroups: ").append(toIndentedString(defaultNewUserGroups)).append("\n");
    sb.append("    defaultNewUserRoleIds: ").append(toIndentedString(defaultNewUserRoleIds)).append("\n");
    sb.append("    defaultNewUserGroupIds: ").append(toIndentedString(defaultNewUserGroupIds)).append("\n");
    sb.append("    setRolesFromGroups: ").append(toIndentedString(setRolesFromGroups)).append("\n");
    sb.append("    groupsAttribute: ").append(toIndentedString(groupsAttribute)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    groupsWithRoleIds: ").append(toIndentedString(groupsWithRoleIds)).append("\n");
    sb.append("    authRequiresRole: ").append(toIndentedString(authRequiresRole)).append("\n");
    sb.append("    userAttributes: ").append(toIndentedString(userAttributes)).append("\n");
    sb.append("    userAttributesWithIds: ").append(toIndentedString(userAttributesWithIds)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    can: ").append(toIndentedString(can)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

